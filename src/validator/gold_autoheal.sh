#!/bin/bash
# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
# üß† BrainTech Robotics ‚Äì Tie-Breaker Auto-Heal & Self-Update
# üíª Execution Context: Laptop / Server Compatible
# üîí Compliance: BTR Gold Protocol ‚Äì Integrity v1.1
# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
set -euo pipefail
trap 'echo "[ERROR] Line $LINENO ‚Äì Auto-Heal aborted"; exit 1' ERR

BASE="$(cd "$(dirname "${BASH_SOURCE[0]}")/../.." >/dev/null 2>&1 && pwd -P)"
LOG="$BASE/logs/gold_autoheal_$(date +%Y%m%d_%H%M%S).log"
mkdir -p "$BASE/logs"

echo "--------------------------------------------------------------" | tee -a "$LOG"
echo "[INFO] Starting Gold Auto-Heal Protocol" | tee -a "$LOG"
echo "Base: $BASE" | tee -a "$LOG"
echo "Timestamp: $(date '+%Y-%m-%d %H:%M:%S')" | tee -a "$LOG"
echo "--------------------------------------------------------------" | tee -a "$LOG"

# ‚îÄ‚îÄ 1Ô∏è‚É£ Ensure directories exist ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
for d in docs src/{loader,validator,telemetry,metrics,aiq_bridge} tests; do
   if [ ! -d "$BASE/$d" ]; then
     echo "[ü©π] Missing $BASE/$d ‚Üí restoring..." | tee -a "$LOG"
     mkdir -p "$BASE/$d"
   fi
done

# ‚îÄ‚îÄ 2Ô∏è‚É£ Fix permissions ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
find "$BASE/src" -type f -name "*.sh" -exec chmod +x {} \;
echo "[üîê] Permissions normalized for scripts" | tee -a "$LOG"

# ‚îÄ‚îÄ 3Ô∏è‚É£ Verify critical files ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
critical=(src/loader/pour_loader.sh src/loader/gold_autorun.sh src/validator/gold_audit.sh)
for f in "${critical[@]}"; do
   if [ ! -f "$BASE/$f" ]; then
     echo "[ü©π] Restoring missing $BASE/$f from template" | tee -a "$LOG"
     echo "#!/bin/bash" > "$BASE/$f"
     echo "# Placeholder restored by Auto-Heal" >> "$BASE/$f"
     chmod +x "$BASE/$f"
   fi
done

# ‚îÄ‚îÄ 4Ô∏è‚É£ Git Self-Update ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
if [ -d "$BASE/.git" ]; then
   echo "[üõ∞Ô∏è] Checking for upstream updates..." | tee -a "$LOG"
   git -f -pull --rebase >/dev/null 2>&1 || echo "[‚ö†Ô∏è] Git pull skipped (no remote)"
   git add . >/dev/null 2>&1
   git commit -m "autoheal: integrity sync $(date +%Y%m%d_%H%M)" >/dev/null 2>&1 || true
else
   echo "[‚ÑπÔ∏è] Git repo not initialized ‚Äì skipping self-update" | tee -a "$LOG"
fi

echo "--------------------------------------------------------------" | tee -a "$LOG"
echo "[‚úÖ] Auto-Heal completed successfully." | tee -a "$LOG"
